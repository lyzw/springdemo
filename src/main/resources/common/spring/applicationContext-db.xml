<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">
	<!--#############################################################-->
	<!-- 数据库数据源 -->
	<bean id="dataSource"
		  class="com.mchange.v2.c3p0.ComboPooledDataSource"
		  destroy-method="close">
		<property name="driverClass" value="${ds.jdbcDriver}" />
		<property name="jdbcUrl" value="${ds.url}" />
		<property name="user" value="${ds.userName}" />
		<property name="password" value="${ds.password}" />
		<property name="initialPoolSize" value="${ds.initPoolSize}" />
		<property name="minPoolSize" value="${ds.minPoolSize}" />
		<property name="maxPoolSize" value="${ds.maxPoolSize}" />
		<!-- 最大空闲时间,单位:秒 -->
		<property name="maxIdleTime" value="60" />
		<property name="acquireIncrement" value="3" />
		<property name="maxStatements" value="0" />
		<!-- 单位:秒 -->
		<property name="idleConnectionTestPeriod" value="60" />
		<!-- 从数据库获取新连接失败后，重复尝试获取的次数 -->
		<property name="acquireRetryAttempts" value="10" />
		<property name="breakAfterAcquireFailure" value="false" />
		<!-- 在取得连接时测试连接的有效性，默认为false -->
		<property name="testConnectionOnCheckin" value="true" />
		<!-- 在每个connection提交时是否校验其有效性。默认为false -->
		<property name="testConnectionOnCheckout" value="false" />
		<property name="checkoutTimeout" value="50000" />
		<property name="preferredTestQuery" value="SELECT 1 FROM DUAL" />
	</bean>

	<!--Spring jdbc模板-->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<constructor-arg name="dataSource" ref="dataSource" />
	</bean>
	<!--#############################################################-->

	<!--#############################################################-->
	<!--Redis数据源-->
	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxIdle" value="${redis.pool.maxIdle}"/>
		<property name="maxTotal" value="${redis.pool.maxActive}"/>
		<property name="maxWaitMillis"  value="${redis.pool.maxWait}"/>
		<property name="testOnBorrow" value="${redis.pool.testOnBorrow}"/>
		<property name="testOnReturn" value="${redis.pool.testOnReturn}"/>
		<property name="minEvictableIdleTimeMillis" value="${redis.pool.minEvictableIdleTimeMillis}" />
		<property name="numTestsPerEvictionRun" value="${redis.pool.numTestsPerEvictionRun}" />
		<property name="timeBetweenEvictionRunsMillis" value="${redis.pool.timeBetweenEvictionRunsMillis}" />
	</bean>

	<bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" destroy-method="destroy">		<property name="poolConfig" ref="jedisPoolConfig"></property>
		<property name="hostName" value="${redis.pool.hostName}" />
		<property name="port" value="${redis.pool.port}" />
		<property name="password" value="${redis.pool.password}" />
		<property name="timeout" value="${redis.pool.timeout}" />
		<property name="usePool" value="${redis.pool.usePool}" />
	</bean>

	<bean id="jedisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="jedisConnectionFactory"></property>
		<property name="keySerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer"/>
		</property>
		<property name="valueSerializer">
			<bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer"/>
		</property>
	</bean>
	<!--#############################################################-->

</beans>